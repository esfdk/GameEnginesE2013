using UnityEngine;
using System.Collections;
using System.IO;
using System.Xml;

public class HM_ControlObjectScript : MonoBehaviour {

	private string sessionName = null, directory = null;
	private int writersActive = 0;

	public string SessionName
	{
		get { return sessionName; }
	}
	
	public string DataDirectory
	{
		get { return directory; }
	}

	/// <summary>
	/// Creates a session if it has not been created already.
	/// </summary>
	public void CreateSession()
	{
		if (sessionName == null && directory == null)
		{
			directory = Directory.GetCurrentDirectory() + "\\HeatMapData";
			sessionName = string.Empty + System.DateTime.Now.ToString(@"yyyy.MM.dd HH.mm.ss");
			
			if(!Directory.Exists(directory))
			{
				Directory.CreateDirectory(directory);
			}

			if (!Directory.Exists(directory + "\\" + sessionName))
			{
				Directory.CreateDirectory(directory + "\\" + sessionName);
			}
		}
	}

	/// <summary>
	/// Combines the files generated by the session.
	/// </summary>
	public void CombineFiles()
	{
		// If no more writers are active, start combining.
		if (writersActive > 0) return;

		// Gets the file that needs to be comined.
		var filesToCombine = Directory.GetFiles(directory + "\\" + this.SessionName);

		// Created the writer/stream for the combined file.
		var combinedFileName = this.DataDirectory + "\\HeatMapData " + this.SessionName + ".xml";
		var fileStream = new FileStream(combinedFileName, FileMode.Create);
		var sw = new StreamWriter(fileStream);
		var writer = new XmlTextWriter(sw);
		writer.Formatting = Formatting.Indented;
		writer.Indentation = 4;
		
		writer.WriteStartDocument();
		writer.WriteStartElement("TrackingData");

		// Iterates over all the files that need to be combined.
		foreach(var sessionFile in filesToCombine)
		{
			// Creates a reader for the current file.
			XmlReader reader = XmlReader.Create(sessionFile);
			XmlDocument xd = new XmlDocument();
			xd.Load(reader);

			// Gets the name of the object whose file is being processed.
			var objectName = sessionFile.Replace(directory + "\\" + sessionName + "\\HeatMapData", string.Empty);
			objectName = objectName.Replace(".xml", string.Empty);

			// Writes the object as an element to the combined file.
			writer.WriteStartElement(objectName);

			// Gets all events from the current file that are childs of the object element.
			XmlElement xelRoot = xd.DocumentElement;
			XmlNodeList xnlNodes = xelRoot.SelectNodes(objectName + "/*");

			// Write all elements to the combined file.
			foreach(XmlNode test in xnlNodes)
			{
				var x = float.Parse(test.Attributes["x"].Value);
				var y = float.Parse(test.Attributes["y"].Value);
				var z = float.Parse(test.Attributes["z"].Value);
				var tempEvent = new HM_Event(test.Name, new Vector3(x, y, z));
				tempEvent.WriteToFile(writer);
			}

			// End the object in the combined file.
			writer.WriteEndElement();
		}

		// End the document.
		writer.WriteEndElement();
		writer.WriteEndDocument();
		writer.Close();
		sw.Close();
		fileStream.Close();
	}

	public void ActivateWriter()
	{
		this.writersActive += 1;
	}
	
	public void DeactivateWriter()
	{
		this.writersActive -= 1;
	}
}
